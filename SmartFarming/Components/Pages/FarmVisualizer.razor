@page "/visualizer/{daterange}/{latitude:double}/{longitude:double}"
@inject IJSRuntime JS
@inject SmartFarming.Services.MeteomaticsApiService MeteomaticsApiService
@inject NavigationManager Navigator

<div>
    <h4>Meteomatics Space Data Analysis</h4>
    <button class="form-button" @onclick="ShowRecommendedActions">Recommended Actions</button>

    @if (string.IsNullOrEmpty(weatherData))
    {
        <p>Loading visualization from Mateometics...</p>
    }
    else
    {
        <iframe src="@iframeSrc" class="responsive-iframe" frameborder="0" allowfullscreen></iframe>
    }
</div>

@code {
    [Parameter]
    public string daterange { get; set; } = "2014-10-05T00:00:00Z--2024-10-05T00:00:00Z:PT1H";
    [Parameter] public double latitude { get; set; } = 63.096;  // NY's Latitude
    [Parameter] public double longitude { get; set; } = 21.615; // NY's Longitude

    private string weatherData;
    string apiEndpoint;
    private string iframeSrc;

    protected override async Task OnInitializedAsync()
    {
        apiEndpoint = $"http://api.meteomatics.com/{daterange}/t_2m:C/{latitude},{longitude}/html";
        // apiEndpoint = $"https://api.meteomatics.com/{daterange}/volumetric_soil_water_-5cm:m3m3,volumetric_soil_water_-15cm:m3m3,volumetric_soil_water_-50cm:m3m3,volumetric_soil_water_-150cm:m3m3/{latitude},{longitude}/html?source=mix";        
        weatherData = await MeteomaticsApiService.GetWeatherDataAsync();
        iframeSrc = $"data:text/html;charset=utf-8,{Uri.EscapeDataString(weatherData)}";
    }

    private void ShowRecommendedActions()
    {
        Navigator.NavigateTo($"/recommendations");
    }
}
